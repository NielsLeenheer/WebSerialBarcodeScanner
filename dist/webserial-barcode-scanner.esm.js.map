{"version":3,"file":"webserial-barcode-scanner.esm.js","sources":["../src/event-emitter.js","../node_modules/@point-of-sale/barcode-parser/dist/barcode-parser.mjs","../src/main.js"],"sourcesContent":["class EventEmitter {\n    constructor(device) {\n        this._events = {};\n    }\n\n    on(e, f) {\n        this._events[e] = this._events[e] || [];\n        this._events[e].push(f);\n    }\n\n    emit(e, ...args) {\n        let fs = this._events[e];\n        if (fs) {\n            fs.forEach(f => {\n                setTimeout(() => f(...args), 0);\n            });\n        }\n    }        \n}\n\nexport default EventEmitter;","class Aim {\n\n    static decode(aim, value) {\n        let data = {\n            symbology: null\n        };\n\n        let code = aim[1];\n        let modifier = aim[2];\n\n        switch (code) {\n            case 'A': data.symbology = 'code39'; break;\n            case 'B': data.symbology = 'telepen'; break;\n            case 'C': \n                data.symbology = 'code128'; \n\n                if (modifier === '1') {\n                    data.symbology = 'gs1-128'; \n                    data.fnc1 = 1;\n                }\n\n                break;\n\n            case 'D': data.symbology = 'code1'; break;\n            case 'E': \n\n                if (value.length === 13) {\n                    data.symbology = 'ean13';\n                }\n\n                else if (value.length === 12) {\n                    data.symbology = 'upca';\n                }\n\n                else if (value.length === 8) {\n                    if (modifier === '4') {\n                        data.symbology = 'ean8';\n                    }\n                    else {\n                        data.symbology = 'upce';\n                    }\n                }\n            \n                break;\n            case 'F': data.symbology = 'codabar'; break;\n            case 'G': data.symbology = 'code93'; break;\n            case 'H': data.symbology = 'code11'; break;\n            case 'I': data.symbology = 'interleaved-2-of-5'; break;\n            case 'K': data.symbology = 'code16k'; break;\n            case 'L': data.symbology = 'pdf417'; break;\n            case 'M': data.symbology = 'msi'; break;\n            case 'N': data.symbology = 'anker'; break;\n            case 'O': \n                if (modifier === '4' || modifier === '5') {\n                    data.symbology = 'codablock-f'; \n                }\n\n                if (modifier === '6') {\n                    data.symbology = 'codablock-a'; \n                }\n\n                break;\n\n            case 'P': data.symbology = 'plessey'; break;\n            case 'R': data.symbology = 'straight-2-of-5'; break;\n            case 'S': data.symbology = 'straight-2-of-5'; break;\n            case 'Q': \n                data.symbology = 'qr-code'; \n\n                if (modifier === '0') {\n                    data.model = 1;\n                }\n\n                else {\n                    data.model = 2;\n\n                    if (modifier === '3' || modifier === '4') {\n                        data.fnc1 = 1;                         \n                    }\n                    \n                    if (modifier === '5' || modifier === '6') {\n                        data.fnc1 = 2;\n                    }\n                }\n\n                break;\n            case 'U': data.symbology = 'maxicode'; break;\n            case 'X': \n                /* Other barcode */\n\n                /* According to Honeywell, this is the identifier for Bookland/ISSN EAN-13 */\n                \n                if (modifier === '0') {\n                    data.symbology = 'ean13';\n                }\n\n                /* Zebra / Motorola uses it for duplicate identifiers already defined by AIM */\n\n                else {\n                    switch(modifier) {\n                        case '9': data.symbology = 'ean13'; break;\n                        case 'C': data.symbology = 'ean8'; break;\n                        case 'g': data.symbology = 'upca'; break;\n                        case 'k': data.symbology = 'upce'; break;\n                        case 'r': data.symbology = 'gs1-databar-omni'; break;\n                        case 's': data.symbology = 'gs1-databar-limited'; break;\n                        case 't': data.symbology = 'gs1-databar-expanded'; break;\n                        case 'V': data.symbology = 'pdf417'; break;\n                        case 'S': data.symbology = 'qr-code-micro'; break;\n                    }\n                }\n\n                break;\n\n            case 'c': data.symbology = 'channel-code'; break;\n            case 'd': \n                data.symbology = 'data-matrix'; \n                \n                if (modifier === '2' || modifier === '5') {\n                    data.fnc1 = 1;\n                }\n\n                if (modifier === '3' || modifier === '6') {\n                    data.fnc1 = 2;\n                }\n\n                break;\n\n            case 'e': data.symbology = 'gs1-databar-omni'; break;\n            case 'h': data.symbology = 'chinese-sensible-code'; break;\n            case 'o': data.symbology = 'ocr'; break;\n            case 'p': data.symbology = 'posi-code'; break;\n            case 's': data.symbology = 'super-code'; break;\n            case 'z': \n                data.symbology = 'aztec-code'; \n                \n                if (modifier === '1' || modifier === '4' || modifier === '7' || modifier === 'A') {\n                    data.fnc1 = 1;\n                }\n\n                if (modifier === '2' || modifier === '5' || modifier === '8' || modifier === 'B') {\n                    data.fnc1 = true;           /* Following an initial letter or pair of digits */\n                }\n\n                break;\n        }\n\n        return data;\n    }\n}\n\nconst labelValues = [\n    [\n        \"SSCC\",\n        [\n            \"00\"\n        ]\n    ],\n    [\n        \"GTIN\",\n        [\n            \"01\"\n        ]\n    ],\n    [\n        \"CONTENT\",\n        [\n            \"02\"\n        ]\n    ], \n    [\n        \"BATCH/LOT\",\n        [\n            \"10\"\n        ]\n    ],\n    [\n        \"PROD DATE\",\n        [\n            \"11\"\n        ]\n    ],\n    [\n        \"DUE DATE\",\n        [\n            \"12\"\n        ]\n    ],\n    [\n        \"PACK DATE\",\n        [\n            \"13\"\n        ]\n    ],\n    [\n        \"BEST BEFORE or BEST BY\",\n        [\n            \"15\"\n        ]\n    ],\n    [\n        \"SELL BY\",\n        [\n            \"16\"\n        ]\n    ],\n    [\n        \"USE BY OR EXPIRY\",\n        [\n            \"17\"\n        ]\n    ],\n    [\n        \"VARIANT\",\n        [\n            \"20\"\n        ]\n    ],\n    [\n        \"SERIAL\",\n        [\n            \"21\"\n        ]\n    ],\n    [\n        \"CPV\",\n        [\n            \"22\"\n        ]\n    ],\n    [\n        \"VAR. COUNT\",\n        [\n            \"30\"\n        ]\n    ],\n    [\n        \"COUNT\",\n        [\n            \"37\"\n        ]\n    ],\n    [\n        \"INTERNAL\",\n        [\n            \"90\",\n            \"91\",\n            \"92\",\n            \"93\",\n            \"94\",\n            \"95\",\n            \"96\",\n            \"97\",\n            \"98\",\n            \"99\"\n        ]\n    ],\n    [\n        \"ADDITIONAL ID\",\n        [\n            \"240\"\n        ]\n    ],\n    [\n        \"CUST. PART NO.\",\n        [\n            \"241\"\n        ]\n    ],\n    [\n        \"MTO VARIANT\",\n        [\n            \"242\"\n        ]\n    ],\n    [\n        \"PCN\",\n        [\n            \"243\"\n        ]\n    ],\n    [\n        \"SECONDARY SERIAL\",\n        [\n            \"250\"\n        ]\n    ],\n    [\n        \"REF. TO SOURCE \",\n        [\n            \"251\"\n        ]\n    ],\n    [\n        \"GDTI\",\n        [\n            \"253\"\n        ]\n    ],\n    [\n        \"GLN EXTENSION COMPONENT\",\n        [\n            \"254\"\n        ]\n    ],\n    [\n        \"GCN\",\n        [\n            \"255\"\n        ]\n    ],\n    [\n        \"ORDER NUMBER\",\n        [\n            \"400\"\n        ]\n    ],\n    [\n        \"GINC\",\n        [\n            \"401\"\n        ]\n    ],\n    [\n        \"GSIN\",\n        [\n            \"402\"\n        ]\n    ],\n    [\n        \"ROUTE\",\n        [\n            \"403\"\n        ]\n    ],\n    [\n        \"SHIP TO LOC\",\n        [\n            \"410\"\n        ]\n    ],\n    [\n        \"BILL TO \",\n        [\n            \"411\"\n        ]\n    ],\n    [\n        \"PURCHASE FROM\",\n        [\n            \"412\"\n        ]\n    ],\n    [\n        \"SHIP FOR LOC\",\n        [\n            \"413\"\n        ]\n    ],\n    [\n        \"LOC No\",\n        [\n            \"414\"\n        ]\n    ],\n    [\n        \"PAY TO\",\n        [\n            \"415\"\n        ]\n    ],\n    [\n        \"PROD/SERV LOC\",\n        [\n            \"416\"\n        ]\n    ],\n    [\n        \"SHIP TO POST\",\n        [\n            \"420\",\n            \"421\"\n        ]\n    ],\n    [\n        \"ORIGIN\",\n        [\n            \"422\"\n        ]\n    ],\n    [\n        \"COUNTRY - INITIAL PROCESS.\",\n        [\n            \"423\"\n        ]\n    ],\n    [\n        \"COUNTRY - PROCESS.\",\n        [\n            \"424\"\n        ]\n    ],\n    [\n        \"COUNTRY - DISASSEMBLY\",\n        [\n            \"425\"\n        ]\n    ],\n    [\n        \"COUNTRY - FULL PROCESS\",\n        [\n            \"426\"\n        ]\n    ],\n    [\n        \"ORIGIN SUBDIVISION\",\n        [\n            \"427\"\n        ]\n    ],\n    [\n        \"NHRN PZN\",\n        [\n            \"710\"\n        ]\n    ],\n    [\n        \"NHRN CIP\",\n        [\n            \"711\"\n        ]\n    ],\n    [\n        \"NHRN CN\",\n        [\n            \"712\"\n        ]\n    ],\n    [\n        \"NHRN DRN\",\n        [\n            \"713\"\n        ]\n    ],\n    [\n        \"NHRN AIM\",\n        [\n            \"714\"\n        ]\n    ],\n    [\n        \"NET WEIGHT (kg)\",\n        [\n            \"3100\",\n            \"3101\",\n            \"3102\",\n            \"3103\",\n            \"3104\",\n            \"3105\"\n        ]\n    ],\n    [\n        \"LENGTH (m)\",\n        [\n            \"3110\",\n            \"3111\",\n            \"3112\",\n            \"3113\",\n            \"3114\",\n            \"3115\"\n        ]\n    ],\n    [\n        \"WIDTH (m)\",\n        [\n            \"3120\",\n            \"3121\",\n            \"3122\",\n            \"3123\",\n            \"3124\",\n            \"3125\"\n        ]\n    ],\n    [\n        \"HEIGHT (m)\",\n        [\n            \"3130\",\n            \"3131\",\n            \"3132\",\n            \"3133\",\n            \"3134\",\n            \"3135\"\n        ]\n    ],\n    [\n        \"AREA (m^2)\",\n        [\n            \"3140\",\n            \"3141\",\n            \"3142\",\n            \"3143\",\n            \"3144\",\n            \"3145\"\n        ]\n    ],\n    [\n        \"NET VOLUME (l)\",\n        [\n            \"3150\",\n            \"3151\",\n            \"3152\",\n            \"3153\",\n            \"3154\",\n            \"3155\"\n        ]\n    ],\n    [\n        \"NET VOLUME (m^3)\",\n        [\n            \"3160\",\n            \"3161\",\n            \"3162\",\n            \"3163\",\n            \"3164\",\n            \"3165\"\n        ]\n    ],\n    [\n        \"NET WEIGHT (lb)\",\n        [\n            \"3200\",\n            \"3201\",\n            \"3202\",\n            \"3203\",\n            \"3204\",\n            \"3205\"\n        ]\n    ],\n    [\n        \"LENGTH (in)\",\n        [\n            \"3210\",\n            \"3211\",\n            \"3212\",\n            \"3213\",\n            \"3214\",\n            \"3215\"\n        ]\n    ],\n    [\n        \"LENGTH (ft)\",\n        [\n            \"3220\",\n            \"3221\",\n            \"3222\",\n            \"3223\",\n            \"3224\",\n            \"3225\"\n        ]\n    ],\n    [\n        \"LENGTH (yd)\",\n        [\n            \"3230\",\n            \"3231\",\n            \"3232\",\n            \"3233\",\n            \"3234\",\n            \"3235\"\n        ]\n    ],\n    [\n        \"WIDTH (in)\",\n        [\n            \"3240\",\n            \"3241\",\n            \"3242\",\n            \"3243\",\n            \"3244\",\n            \"3245\"\n        ]\n    ],\n    [\n        \"WIDTH (ft)\",\n        [\n            \"3250\",\n            \"3251\",\n            \"3252\",\n            \"3253\",\n            \"3254\",\n            \"3255\"\n        ]\n    ],\n    [\n        \"WIDTH (yd)\",\n        [\n            \"3260\",\n            \"3261\",\n            \"3262\",\n            \"3263\",\n            \"3264\",\n            \"3265\"\n        ]\n    ],\n    [\n        \"HEIGHT (in)\",\n        [\n            \"3270\",\n            \"3271\",\n            \"3272\",\n            \"3273\",\n            \"3274\",\n            \"3275\"\n        ]\n    ],\n    [\n        \"HEIGHT (ft)\",\n        [\n            \"3280\",\n            \"3281\",\n            \"3282\",\n            \"3283\",\n            \"3284\",\n            \"3285\"\n        ]\n    ],\n    [\n        \"HEIGHT (yd)\",\n        [\n            \"3290\",\n            \"3291\",\n            \"3292\",\n            \"3293\",\n            \"3294\",\n            \"3295\"\n        ]\n    ],\n    [\n        \"GROSS WEIGHT (kg)\",\n        [\n            \"3300\",\n            \"3301\",\n            \"3302\",\n            \"3303\",\n            \"3304\",\n            \"3305\"\n        ]\n    ],\n    [\n        \"LENGTH (m), log\",\n        [\n            \"3310\",\n            \"3311\",\n            \"3312\",\n            \"3313\",\n            \"3314\",\n            \"3315\"\n        ]\n    ],\n    [\n        \"WIDTH (m), log\",\n        [\n            \"3320\",\n            \"3321\",\n            \"3322\",\n            \"3323\",\n            \"3324\",\n            \"3325\"\n        ]\n    ],\n    [\n        \"HEIGHT (m), log\",\n        [\n            \"3330\",\n            \"3331\",\n            \"3332\",\n            \"3333\",\n            \"3334\",\n            \"3335\"\n        ]\n    ],\n    [\n        \"AREA (m^2), log\",\n        [\n            \"3340\",\n            \"3341\",\n            \"3342\",\n            \"3343\",\n            \"3344\",\n            \"3345\"\n        ]\n    ],\n    [\n        \"VOLUME (l), log\",\n        [\n            \"3350\",\n            \"3351\",\n            \"3352\",\n            \"3353\",\n            \"3354\",\n            \"3355\"\n        ]\n    ],\n    [\n        \"VOLUME (m^3), log\",\n        [\n            \"3360\",\n            \"3361\",\n            \"3362\",\n            \"3363\",\n            \"3364\",\n            \"3365\"\n        ]\n    ],\n    [\n        \"KG PER m^2\",\n        [\n            \"3370\",\n            \"3371\",\n            \"3372\",\n            \"3373\",\n            \"3374\",\n            \"3375\"\n        ]\n    ],\n    [\n        \"GROSS WEIGHT (lb)\",\n        [\n            \"3400\",\n            \"3401\",\n            \"3402\",\n            \"3403\",\n            \"3404\",\n            \"3405\"\n        ]\n    ],\n    [\n        \"LENGTH (in), log\",\n        [\n            \"3410\",\n            \"3411\",\n            \"3412\",\n            \"3413\",\n            \"3414\",\n            \"3415\"\n        ]\n    ],\n    [\n        \"LENGTH (ft), log\",\n        [\n            \"3420\",\n            \"3421\",\n            \"3422\",\n            \"3423\",\n            \"3424\",\n            \"3425\"\n        ]\n    ],\n    [\n        \"LENGTH (yd), log\",\n        [\n            \"3430\",\n            \"3431\",\n            \"3432\",\n            \"3433\",\n            \"3434\",\n            \"3435\"\n        ]\n    ],\n    [\n        \"WIDTH (in), log\",\n        [\n            \"3440\",\n            \"3441\",\n            \"3442\",\n            \"3443\",\n            \"3444\",\n            \"3445\"\n        ]\n    ],\n    [\n        \"WIDTH (ft), log\",\n        [\n            \"3450\",\n            \"3451\",\n            \"3452\",\n            \"3453\",\n            \"3454\",\n            \"3455\"\n        ]\n    ],\n    [\n        \"WIDTH (yd), log\",\n        [\n            \"3460\",\n            \"3461\",\n            \"3462\",\n            \"3463\",\n            \"3464\",\n            \"3465\"\n        ]\n    ],\n    [\n        \"HEIGHT (in), log\",\n        [\n            \"3470\",\n            \"3471\",\n            \"3472\",\n            \"3473\",\n            \"3474\",\n            \"3475\"\n        ]\n    ],\n    [\n        \"HEIGHT (ft), log\",\n        [\n            \"3480\",\n            \"3481\",\n            \"3482\",\n            \"3483\",\n            \"3484\",\n            \"3485\"\n        ]\n    ],\n    [\n        \"HEIGHT (yd), log\",\n        [\n            \"3490\",\n            \"3491\",\n            \"3492\",\n            \"3493\",\n            \"3494\",\n            \"3495\"\n        ]\n    ],\n    [\n        \"AREA (in^2)\",\n        [\n            \"3500\",\n            \"3501\",\n            \"3502\",\n            \"3503\",\n            \"3504\",\n            \"3505\"\n        ]\n    ],\n    [\n        \"AREA (ft^2)\",\n        [\n            \"3510\",\n            \"3511\",\n            \"3512\",\n            \"3513\",\n            \"3514\",\n            \"3515\"\n        ]\n    ],\n    [\n        \"AREA (yd^2)\",\n        [\n            \"3520\",\n            \"3521\",\n            \"3522\",\n            \"3523\",\n            \"3524\",\n            \"3525\"\n        ]\n    ],\n    [\n        \"AREA (in^2), log\",\n        [\n            \"3530\",\n            \"3531\",\n            \"3532\",\n            \"3533\",\n            \"3534\",\n            \"3535\"\n        ]\n    ],\n    [\n        \"AREA (ft^2), log\",\n        [\n            \"3540\",\n            \"3541\",\n            \"3542\",\n            \"3543\",\n            \"3544\",\n            \"3545\"\n        ]\n    ],\n    [\n        \"AREA (yd^2), log\",\n        [\n            \"3550\",\n            \"3551\",\n            \"3552\",\n            \"3553\",\n            \"3554\",\n            \"3555\"\n        ]\n    ],\n    [\n        \"NET WEIGHT (t oz)\",\n        [\n            \"3560\",\n            \"3561\",\n            \"3562\",\n            \"3563\",\n            \"3564\",\n            \"3565\"\n        ]\n    ],\n    [\n        \"NET VOLUME (oz)\",\n        [\n            \"3570\",\n            \"3571\",\n            \"3572\",\n            \"3573\",\n            \"3574\",\n            \"3575\"\n        ]\n    ],\n    [\n        \"NET VOLUME (qt)\",\n        [\n            \"3600\",\n            \"3601\",\n            \"3602\",\n            \"3603\",\n            \"3604\",\n            \"3605\"\n        ]\n    ],\n    [\n        \"NET VOLUME (gal.)\",\n        [\n            \"3610\",\n            \"3611\",\n            \"3612\",\n            \"3613\",\n            \"3614\",\n            \"3615\"\n        ]\n    ],\n    [\n        \"VOLUME (qt), log\",\n        [\n            \"3620\",\n            \"3621\",\n            \"3622\",\n            \"3623\",\n            \"3624\",\n            \"3625\"\n        ]\n    ],\n    [\n        \"VOLUME (gal.), log\",\n        [\n            \"3630\",\n            \"3631\",\n            \"3632\",\n            \"3633\",\n            \"3634\",\n            \"3635\"\n        ]\n    ],\n    [\n        \"VOLUME (in^3) \",\n        [\n            \"3640\",\n            \"3641\",\n            \"3642\",\n            \"3643\",\n            \"3644\",\n            \"3645\"\n        ]\n    ],\n    [\n        \"VOLUME (ft^3) \",\n        [\n            \"3650\",\n            \"3651\",\n            \"3652\",\n            \"3653\",\n            \"3654\",\n            \"3655\"\n        ]\n    ],\n    [\n        \"VOLUME (yd^3) \",\n        [\n            \"3660\",\n            \"3661\",\n            \"3662\",\n            \"3663\",\n            \"3664\",\n            \"3665\"\n        ]\n    ],\n    [\n        \"VOLUME (in^3), log\",\n        [\n            \"3670\",\n            \"3671\",\n            \"3672\",\n            \"3673\",\n            \"3674\",\n            \"3675\"\n        ]\n    ],\n    [\n        \"VOLUME (ft^3), log\",\n        [\n            \"3680\",\n            \"3681\",\n            \"3682\",\n            \"3683\",\n            \"3684\",\n            \"3685\"\n        ]\n    ],\n    [\n        \"VOLUME (yd^3), log\",\n        [\n            \"3690\",\n            \"3691\",\n            \"3692\",\n            \"3693\",\n            \"3694\",\n            \"3695\"\n        ]\n    ],\n    [\n        \"AMOUNT\",\n        [\n            \"3900\",\n            \"3901\",\n            \"3902\",\n            \"3903\",\n            \"3904\",\n            \"3905\",\n            \"3906\",\n            \"3907\",\n            \"3908\",\n            \"3909\",\n            \"3910\",\n            \"3911\",\n            \"3912\",\n            \"3913\",\n            \"3914\",\n            \"3915\",\n            \"3916\",\n            \"3917\",\n            \"3918\",\n            \"3919\"\n        ]\n    ],\n    [\n        \"PRICE\",\n        [\n            \"3920\",\n            \"3921\",\n            \"3922\",\n            \"3923\",\n            \"3924\",\n            \"3925\",\n            \"3926\",\n            \"3927\",\n            \"3928\",\n            \"3929\",\n            \"3930\",\n            \"3931\",\n            \"3932\",\n            \"3933\",\n            \"3934\",\n            \"3935\",\n            \"3936\",\n            \"3937\",\n            \"3938\",\n            \"3939\"\n        ]\n    ],\n    [\n        \"PRCNT OFF\",\n        [\n            \"3940\",\n            \"3941\",\n            \"3942\",\n            \"3943\"\n        ]\n    ],\n    [\n        \"NSN\",\n        [\n            \"7001\"\n        ]\n    ],\n    [\n        \"MEAT CUT\",\n        [\n            \"7002\"\n        ]\n    ],\n    [\n        \"EXPIRY TIME\",\n        [\n            \"7003\"\n        ]\n    ],\n    [\n        \"ACTIVE POTENCY\",\n        [\n            \"7004\"\n        ]\n    ],\n    [\n        \"CATCH AREA\",\n        [\n            \"7005\"\n        ]\n    ],\n    [\n        \"FIRST FREEZE DATE\",\n        [\n            \"7006\"\n        ]\n    ],\n    [\n        \"HARVEST DATE\",\n        [\n            \"7007\"\n        ]\n    ],\n    [\n        \"AQUATIC SPECIES\",\n        [\n            \"7008\"\n        ]\n    ],\n    [\n        \"FISHING GEAR TYPE\",\n        [\n            \"7009\"\n        ]\n    ],\n    [\n        \"PROD METHOD\",\n        [\n            \"7010\"\n        ]\n    ],\n    [\n        \"REFURB LOT\",\n        [\n            \"7020\"\n        ]\n    ],\n    [\n        \"FUNC STAT\",\n        [\n            \"7021\"\n        ]\n    ],\n    [\n        \"REV STAT\",\n        [\n            \"7022\"\n        ]\n    ],\n    [\n        \"GIAI - ASSEMBLY\",\n        [\n            \"7023\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 0\",\n        [\n            \"7030\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 1\",\n        [\n            \"7031\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 2\",\n        [\n            \"7032\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 3\",\n        [\n            \"7033\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 4\",\n        [\n            \"7034\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 5\",\n        [\n            \"7035\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 6\",\n        [\n            \"7036\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 7\",\n        [\n            \"7037\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 8\",\n        [\n            \"7038\"\n        ]\n    ],\n    [\n        \"PROCESSOR # 9\",\n        [\n            \"7039\"\n        ]\n    ],\n    [\n        \"CERT # 0\",\n        [\n            \"7230\"\n        ]\n    ],\n    [\n        \"CERT # 1\",\n        [\n            \"7231\"\n        ]\n    ],\n    [\n        \"CERT # 2\",\n        [\n            \"7232\"\n        ]\n    ],\n    [\n        \"CERT # 3\",\n        [\n            \"7233\"\n        ]\n    ],\n    [\n        \"CERT # 4\",\n        [\n            \"7234\"\n        ]\n    ],\n    [\n        \"CERT # 5\",\n        [\n            \"7235\"\n        ]\n    ],\n    [\n        \"CERT # 6\",\n        [\n            \"7236\"\n        ]\n    ],\n    [\n        \"CERT # 7\",\n        [\n            \"7237\"\n        ]\n    ],\n    [\n        \"CERT # 8\",\n        [\n            \"7238\"\n        ]\n    ],\n    [\n        \"CERT # 9\",\n        [\n            \"7239\"\n        ]\n    ],\n    [\n        \"DIMENSIONS\",\n        [\n            \"8001\"\n        ]\n    ],\n    [\n        \"CMT No\",\n        [\n            \"8002\"\n        ]\n    ],\n    [\n        \"GRAI\",\n        [\n            \"8003\"\n        ]\n    ],\n    [\n        \"GIAI\",\n        [\n            \"8004\"\n        ]\n    ],\n    [\n        \"PRICE PER UNIT\",\n        [\n            \"8005\"\n        ]\n    ],\n    [\n        \"ITIP\",\n        [\n            \"8006\"\n        ]\n    ],\n    [\n        \"IBAN\",\n        [\n            \"8007\"\n        ]\n    ],\n    [\n        \"PROD TIME\",\n        [\n            \"8008\"\n        ]\n    ],\n    [\n        \"OPT SEN\",\n        [\n            \"8009\"\n        ]\n    ],\n    [\n        \"CPID\",\n        [\n            \"8010\"\n        ]\n    ],\n    [\n        \"CPID SERIAL\",\n        [\n            \"8011\"\n        ]\n    ],\n    [\n        \"VERSION\",\n        [\n            \"8012\"\n        ]\n    ],\n    [\n        \"GMN (for medical devices, the default, global data title is BUDI-DI )\",\n        [\n            \"8013\"\n        ]\n    ],\n    [\n        \"GSRN - PROVIDER\",\n        [\n            \"8017\"\n        ]\n    ],\n    [\n        \"GSRN - RECIPIENT\",\n        [\n            \"8018\"\n        ]\n    ],\n    [\n        \"SRIN\",\n        [\n            \"8019\"\n        ]\n    ],\n    [\n        \"REF No\",\n        [\n            \"8020\"\n        ]\n    ],\n    [\n        \"ITIP CONTENT\",\n        [\n            \"8026\"\n        ]\n    ],\n    [\n        \"POINTS\",\n        [\n            \"8111\"\n        ]\n    ],\n    [\n        \"PRODUCT URL\",\n        [\n            \"8200\"\n        ]\n    ] \n];\n\nconst labels = Object.fromEntries(\n    labelValues\n        .map(i => i[1]\n        .map(j => [ j, i[0] ]))\n        .reduce((a,c) => [ ...a, ...c], [])\n);\n\nconst fixedLength = {\n    \"00\": 20,\n    \"01\": 16,\n    \"02\": 16,\n    \"03\": 16,\n    \"04\": 18,\n    \"11\": 8,\n    \"12\": 8,\n    \"13\": 8,\n    \"14\": 8,\n    \"15\": 8,\n    \"16\": 8,\n    \"17\": 8,\n    \"18\": 8,\n    \"19\": 8,\n    \"20\": 4,\n    \"31\": 10,\n    \"32\": 10,\n    \"33\": 10,\n    \"34\": 10,\n    \"35\": 10,\n    \"36\": 10,\n    \"41\": 16\n};\n\nconst patternsValues = [\n    [\n        \"(\\\\d{12,14}|\\\\d{8})\",\n        [\n            \"01\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,20})\",\n        [\n            \"10\",\n            \"21\",\n            \"22\",\n            \"243\",\n            \"254\",\n            \"420\",\n            \"710\",\n            \"711\",\n            \"712\",\n            \"713\",\n            \"714\",\n            \"7020\",\n            \"7021\",\n            \"7022\",\n            \"8002\",\n            \"8012\"\n        ]\n    ],\n    [\n        \"(\\\\d{6})\",\n        [\n            \"11\",\n            \"12\",\n            \"13\",\n            \"15\",\n            \"16\",\n            \"17\",\n            \"3100\",\n            \"3101\",\n            \"3102\",\n            \"3103\",\n            \"3104\",\n            \"3105\",\n            \"3110\",\n            \"3111\",\n            \"3112\",\n            \"3113\",\n            \"3114\",\n            \"3115\",\n            \"3120\",\n            \"3121\",\n            \"3122\",\n            \"3123\",\n            \"3124\",\n            \"3125\",\n            \"3130\",\n            \"3131\",\n            \"3132\",\n            \"3133\",\n            \"3134\",\n            \"3135\",\n            \"3140\",\n            \"3141\",\n            \"3142\",\n            \"3143\",\n            \"3144\",\n            \"3145\",\n            \"3150\",\n            \"3151\",\n            \"3152\",\n            \"3153\",\n            \"3154\",\n            \"3155\",\n            \"3160\",\n            \"3161\",\n            \"3162\",\n            \"3163\",\n            \"3164\",\n            \"3165\",\n            \"3200\",\n            \"3201\",\n            \"3202\",\n            \"3203\",\n            \"3204\",\n            \"3205\",\n            \"3210\",\n            \"3211\",\n            \"3212\",\n            \"3213\",\n            \"3214\",\n            \"3215\",\n            \"3220\",\n            \"3221\",\n            \"3222\",\n            \"3223\",\n            \"3224\",\n            \"3225\",\n            \"3230\",\n            \"3231\",\n            \"3232\",\n            \"3233\",\n            \"3234\",\n            \"3235\",\n            \"3240\",\n            \"3241\",\n            \"3242\",\n            \"3243\",\n            \"3244\",\n            \"3245\",\n            \"3250\",\n            \"3251\",\n            \"3252\",\n            \"3253\",\n            \"3254\",\n            \"3255\",\n            \"3260\",\n            \"3261\",\n            \"3262\",\n            \"3263\",\n            \"3264\",\n            \"3265\",\n            \"3270\",\n            \"3271\",\n            \"3272\",\n            \"3273\",\n            \"3274\",\n            \"3275\",\n            \"3280\",\n            \"3281\",\n            \"3282\",\n            \"3283\",\n            \"3284\",\n            \"3285\",\n            \"3290\",\n            \"3291\",\n            \"3292\",\n            \"3293\",\n            \"3294\",\n            \"3295\",\n            \"3300\",\n            \"3301\",\n            \"3302\",\n            \"3303\",\n            \"3304\",\n            \"3305\",\n            \"3310\",\n            \"3311\",\n            \"3312\",\n            \"3313\",\n            \"3314\",\n            \"3315\",\n            \"3320\",\n            \"3321\",\n            \"3322\",\n            \"3323\",\n            \"3324\",\n            \"3325\",\n            \"3330\",\n            \"3331\",\n            \"3332\",\n            \"3333\",\n            \"3334\",\n            \"3335\",\n            \"3340\",\n            \"3341\",\n            \"3342\",\n            \"3343\",\n            \"3344\",\n            \"3345\",\n            \"3350\",\n            \"3351\",\n            \"3352\",\n            \"3353\",\n            \"3354\",\n            \"3355\",\n            \"3360\",\n            \"3361\",\n            \"3362\",\n            \"3363\",\n            \"3364\",\n            \"3365\",\n            \"3370\",\n            \"3371\",\n            \"3372\",\n            \"3373\",\n            \"3374\",\n            \"3375\",\n            \"3400\",\n            \"3401\",\n            \"3402\",\n            \"3403\",\n            \"3404\",\n            \"3405\",\n            \"3410\",\n            \"3411\",\n            \"3412\",\n            \"3413\",\n            \"3414\",\n            \"3415\",\n            \"3420\",\n            \"3421\",\n            \"3422\",\n            \"3423\",\n            \"3424\",\n            \"3425\",\n            \"3430\",\n            \"3431\",\n            \"3432\",\n            \"3433\",\n            \"3434\",\n            \"3435\",\n            \"3440\",\n            \"3441\",\n            \"3442\",\n            \"3443\",\n            \"3444\",\n            \"3445\",\n            \"3450\",\n            \"3451\",\n            \"3452\",\n            \"3453\",\n            \"3454\",\n            \"3455\",\n            \"3460\",\n            \"3461\",\n            \"3462\",\n            \"3463\",\n            \"3464\",\n            \"3465\",\n            \"3470\",\n            \"3471\",\n            \"3472\",\n            \"3473\",\n            \"3474\",\n            \"3475\",\n            \"3480\",\n            \"3481\",\n            \"3482\",\n            \"3483\",\n            \"3484\",\n            \"3485\",\n            \"3490\",\n            \"3491\",\n            \"3492\",\n            \"3493\",\n            \"3494\",\n            \"3495\",\n            \"3500\",\n            \"3501\",\n            \"3502\",\n            \"3503\",\n            \"3504\",\n            \"3505\",\n            \"3510\",\n            \"3511\",\n            \"3512\",\n            \"3513\",\n            \"3514\",\n            \"3515\",\n            \"3520\",\n            \"3521\",\n            \"3522\",\n            \"3523\",\n            \"3524\",\n            \"3525\",\n            \"3530\",\n            \"3531\",\n            \"3532\",\n            \"3533\",\n            \"3534\",\n            \"3535\",\n            \"3540\",\n            \"3541\",\n            \"3542\",\n            \"3543\",\n            \"3544\",\n            \"3545\",\n            \"3550\",\n            \"3551\",\n            \"3552\",\n            \"3553\",\n            \"3554\",\n            \"3555\",\n            \"3560\",\n            \"3561\",\n            \"3562\",\n            \"3563\",\n            \"3564\",\n            \"3565\",\n            \"3570\",\n            \"3571\",\n            \"3572\",\n            \"3573\",\n            \"3574\",\n            \"3575\",\n            \"3600\",\n            \"3601\",\n            \"3602\",\n            \"3603\",\n            \"3604\",\n            \"3605\",\n            \"3610\",\n            \"3611\",\n            \"3612\",\n            \"3613\",\n            \"3614\",\n            \"3615\",\n            \"3620\",\n            \"3621\",\n            \"3622\",\n            \"3623\",\n            \"3624\",\n            \"3625\",\n            \"3630\",\n            \"3631\",\n            \"3632\",\n            \"3633\",\n            \"3634\",\n            \"3635\",\n            \"3640\",\n            \"3641\",\n            \"3642\",\n            \"3643\",\n            \"3644\",\n            \"3645\",\n            \"3650\",\n            \"3651\",\n            \"3652\",\n            \"3653\",\n            \"3654\",\n            \"3655\",\n            \"3660\",\n            \"3661\",\n            \"3662\",\n            \"3663\",\n            \"3664\",\n            \"3665\",\n            \"3670\",\n            \"3671\",\n            \"3672\",\n            \"3673\",\n            \"3674\",\n            \"3675\",\n            \"3680\",\n            \"3681\",\n            \"3682\",\n            \"3683\",\n            \"3684\",\n            \"3685\",\n            \"3690\",\n            \"3691\",\n            \"3692\",\n            \"3693\",\n            \"3694\",\n            \"3695\",\n            \"7006\",\n            \"8005\"\n        ]\n    ],\n    [\n        \"(\\\\d{2})\",\n        [\n            \"20\"\n        ]\n    ],\n    [\n        \"(\\\\d{0,8})\",\n        [\n            \"30\",\n            \"37\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,30})\",\n        [\n            \"90\",\n            \"240\",\n            \"241\",\n            \"250\",\n            \"251\",\n            \"400\",\n            \"401\",\n            \"403\",\n            \"7002\",\n            \"7023\",\n            \"8004\",\n            \"8013\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,90})\",\n        [\n            \"91\",\n            \"92\",\n            \"93\",\n            \"94\",\n            \"95\",\n            \"96\",\n            \"97\",\n            \"98\",\n            \"99\"\n        ]\n    ],\n    [\n        \"(\\\\d{0,6})\",\n        [\n            \"242\"\n        ]\n    ],\n    [\n        \"(\\\\d{13})([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,17})\",\n        [\n            \"253\"\n        ]\n    ],\n    [\n        \"(\\\\d{13})(\\\\d{0,12})\",\n        [\n            \"255\"\n        ]\n    ],\n    [\n        \"(\\\\d{17})\",\n        [\n            \"402\"\n        ]\n    ],\n    [\n        \"(\\\\d{13})\",\n        [\n            \"410\",\n            \"411\",\n            \"412\",\n            \"413\",\n            \"414\",\n            \"415\",\n            \"416\",\n            \"7001\"\n        ]\n    ],\n    [\n        \"(\\\\d{3})([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,9})\",\n        [\n            \"421\"\n        ]\n    ],\n    [\n        \"(\\\\d{3})\",\n        [\n            \"422\",\n            \"424\",\n            \"426\"\n        ]\n    ],\n    [\n        \"(\\\\d{3})(\\\\d{0,12})\",\n        [\n            \"423\",\n            \"425\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,3})\",\n        [\n            \"427\",\n            \"7008\"\n        ]\n    ],\n    [\n        \"(\\\\d{0,15})\",\n        [\n            \"3900\",\n            \"3901\",\n            \"3902\",\n            \"3903\",\n            \"3904\",\n            \"3905\",\n            \"3906\",\n            \"3907\",\n            \"3908\",\n            \"3909\",\n            \"3920\",\n            \"3921\",\n            \"3922\",\n            \"3923\",\n            \"3924\",\n            \"3925\",\n            \"3926\",\n            \"3927\",\n            \"3928\",\n            \"3929\"\n        ]\n    ],\n    [\n        \"(\\\\d{3})(\\\\d{0,15})\",\n        [\n            \"3910\",\n            \"3911\",\n            \"3912\",\n            \"3913\",\n            \"3914\",\n            \"3915\",\n            \"3916\",\n            \"3917\",\n            \"3918\",\n            \"3919\",\n            \"3930\",\n            \"3931\",\n            \"3932\",\n            \"3933\",\n            \"3934\",\n            \"3935\",\n            \"3936\",\n            \"3937\",\n            \"3938\",\n            \"3939\"\n        ]\n    ],\n    [\n        \"(\\\\d{4})\",\n        [\n            \"3940\",\n            \"3941\",\n            \"3942\",\n            \"3943\",\n            \"8111\"\n        ]\n    ],\n    [\n        \"(\\\\d{10})\",\n        [\n            \"7003\"\n        ]\n    ],\n    [\n        \"(\\\\d{0,4})\",\n        [\n            \"7004\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,12})\",\n        [\n            \"7005\"\n        ]\n    ],\n    [\n        \"(\\\\d{6,12})\",\n        [\n            \"7007\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,10})\",\n        [\n            \"7009\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,2})\",\n        [\n            \"7010\"\n        ]\n    ],\n    [\n        \"(\\\\d{3})([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,27})\",\n        [\n            \"7030\",\n            \"7031\",\n            \"7032\",\n            \"7033\",\n            \"7034\",\n            \"7035\",\n            \"7036\",\n            \"7037\",\n            \"7038\",\n            \"7039\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{2,30})\",\n        [\n            \"7230\",\n            \"7231\",\n            \"7232\",\n            \"7233\",\n            \"7234\",\n            \"7235\",\n            \"7236\",\n            \"7237\",\n            \"7238\",\n            \"7239\"\n        ]\n    ],\n    [\n        \"(\\\\d{14})\",\n        [\n            \"8001\",\n            \"02\"\n        ]\n    ],\n    [\n        \"(\\\\d{14})([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,16})\",\n        [\n            \"8003\"\n        ]\n    ],\n    [\n        \"(\\\\d{14})(\\\\d{2})(\\\\d{2})\",\n        [\n            \"8006\",\n            \"8026\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,34})\",\n        [\n            \"8007\"\n        ]\n    ],\n    [\n        \"(\\\\d{8})(\\\\d{0,4})\",\n        [\n            \"8008\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,50})\",\n        [\n            \"8009\"\n        ]\n    ],\n    [\n        \"([\\\\x23\\\\x2D\\\\x2F\\\\x30-\\\\x39\\\\x41-\\\\x5A]{0,30})\",\n        [\n            \"8010\"\n        ]\n    ],\n    [\n        \"(\\\\d{0,12})\",\n        [\n            \"8011\"\n        ]\n    ],\n    [\n        \"(\\\\d{18})\",\n        [\n            \"8017\",\n            \"8018\",\n            \"00\"\n        ]\n    ],\n    [\n        \"(\\\\d{0,10})\",\n        [\n            \"8019\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,25})\",\n        [\n            \"8020\"\n        ]\n    ],\n    [\n        \"([\\\\x21-\\\\x22\\\\x25-\\\\x2F\\\\x30-\\\\x3F\\\\x41-\\\\x5A\\\\x5F\\\\x61-\\\\x7A]{0,70})\",\n        [\n            \"8110\",\n            \"8112\",\n            \"8200\"\n        ]\n    ]\n];\n\nconst patterns = Object.fromEntries(\n    patternsValues\n        .map(i => i[1]\n        .map(j => [ j, i[0] ]))\n        .reduce((a,c) => [ ...a, ...c], [])\n);\n\nconst checkDigitPositions = {\n    \"253\": 13,\n    \"255\": 13,\n    \"402\": \"L\",\n    \"410\": \"L\",\n    \"411\": \"L\",\n    \"412\": \"L\",\n    \"413\": \"L\",\n    \"414\": \"L\",\n    \"415\": \"L\",\n    \"416\": \"L\",\n    \"8003\": 14,\n    \"8006\": 14,\n    \"8017\": \"L\",\n    \"8018\": \"L\",\n    \"8026\": 14,\n    \"00\": \"L\",\n    \"01\": \"L\",\n    \"02\": \"L\"\n};\n\nclass DigitalLink {\n\n    static is(data) {\n        return typeof data === 'string' && (        \n            data.match(/^(https?|HTTPS?):(\\/\\/((([^\\/?#]*)@)?([^\\/?#:]*)(:([^\\/?#]*))?))?([^?#]*)(((\\/(01|8006|8013|8010|414|415|417|8017|8018|255|00|253|401|402|8003|8004)\\/)(\\d{4}[^\\/]+)(\\/[^/]+\\/[^/]+)?[/]?(\\?([^?\\n]*))?(#([^\\n]*))?))/) ||\n            data.match(/^(https?|HTTPS?):(\\/\\/((([^\\/?#]*)@)?([^\\/?#:]*)(:([^\\/?#]*))?))?([^?#]*)((\\/[0-9A-Za-z_-]{10,}$))/)\n        );\n    }\n   \n\tstatic calculateCheckDigit(ai, value) {\n\t\tlet counter = 0;\n\t\tlet total = 0;\n\n        let checkDigitPosition = checkDigitPositions[ai] === \"L\" ? value.length : checkDigitPositions[ai];\n        \n\t\tfor (let i = checkDigitPosition - 2; i >= 0; i--) {\n\t\t\tlet digit = value.charAt(i);\n            let multiplier;\n\n\t\t\tif (counter % 2 === 0) {\n\t\t\t\tmultiplier = 3;\n\t\t\t} else {\n\t\t\t\tmultiplier = 1;\n\t\t\t}\n\n\t\t\ttotal += digit * multiplier;\n\t\t\tcounter++;\n\t\t}\n\n\t\treturn (10 - (total % 10)) % 10;\n\t}\n\n\tstatic verifyCheckDigit(ai, value) {\n        if (!checkDigitPositions[ai]) {\n            return true;\n        }\n\n        let checkDigitPosition = checkDigitPositions[ai] === \"L\" ? value.length : checkDigitPositions[ai];\n        let actualCheckDigit = parseInt(value.charAt(checkDigitPosition - 1), 10);\n        let expectedCheckDigit = DigitalLink.calculateCheckDigit(ai, value);\n\n        if (actualCheckDigit !== expectedCheckDigit) { \n            console.log(`Invalid check digit: An invalid check digit was found for the primary identification key (${ai})${value}; the correct check digit should be ${expectedCheckDigit} at position ${checkDigitPosition}`);\n            return false;\n        }\n\t}\n\n\tstatic verifySyntax(ai, value) {\n\t\tlet re = new RegExp(\"^\" + patterns[ai] + \"$\");\n\n\t\tif (!re.test(value)) {\n\t\t\tconsole.log(`Syntax error: Invalid syntax for value of (${ai}): ${value}`);\n            return false;\n\t\t}\n\n        return true;\n\t}\n\n    static parse(link) {\n        let candidates = [];\n\n        /* Extract the AI and value pairs from the link */\n\n        let url = new URL(link);\n\n        if (url.pathname != '/') {\n            let pairs = url.pathname.substr(1).split('/');\n\n            while (pairs.length >= 2) {\n                candidates.push([ pairs.shift(), decodeURIComponent(pairs.shift()) ]);\n            }\n        }\n        \n        if (url.search != '') {\n            let pairs = [ ...(new URLSearchParams(url.search.replace(/;/, '&'))) ];\n\n            for (let [ai, value] of pairs) {\n                candidates.push([ ai, value ]);\n            }\n        }\n\n        /* Verify the syntax and check digits of the elements */\n        \n        let elements = [];\n                \n        for (let [ai, value] of candidates) {\n            let valid = true;\n            valid &= DigitalLink.verifySyntax(ai, value);\n            valid &= DigitalLink.verifyCheckDigit(ai, value);\n\n            if (valid) {\n                if (ai == \"01\" || ai == \"02\") {\n                    value = value.padStart(14, '0');\n                }\n\n                elements.push({\n                    ai,\n                    value,\n                    label: labels[ai]\n                });\n            }\n        }\n\n        /* Sort elements by AI */\n\n        elements.sort((a, b) => {\n            return a.ai.localeCompare(b.ai);\n        });\n                            \n        return elements;\n    }\n}\n\nconst GS = String.fromCharCode(29);\n\nclass Elements {\n\n    static parse(data) {\n        let elements = [];\n\n        /* Split the data into elements */\n\n        let segments = data.split(GS);\n\n        for (let segment of segments) {\n            while (segment.length) {\n                let ai = segment.substr(0, 2);\n\n                if (ai in fixedLength) {\n                    elements.push({ value: segment.substr(0, fixedLength[ai]) });\n                    segment = segment.substr(fixedLength[ai]);\n                }\n                else {\n                    elements.push({ value: segment });\n                    segment = '';\n                }\n            }\n        }\n\n        /* Parse the elements */\n\n        for (let element of elements) {\n            let aiSize;\n\n            for (let i = 2; i <=4; i++) {\n                if (element.value.substr(0, i) in labels) {\n                    aiSize = i;\n                    break;\n                }\n            }\n\n            if (aiSize) {\n                element.ai = element.value.substr(0, aiSize);\n                element.value = element.value.substr(aiSize);\n                element.label = labels[element.ai];\n            }\n        }\n        \n        return elements;\n    }\n}\n\nclass UPCE {\n\n    static expand(value) {\n        \n        /* Digits 2 to 7 (UPC-E has a leading digit) */\n        const digits = value.substring(1, 7); \n        \n        /* The last digit (check digit) */\n        const lastDigit = value.charAt(7); \n\n        let result = '';\n\n        switch (digits.charAt(5)) {\n            case '0':\n            case '1':\n            case '2':\n                // If the 4th digit is 0, 1, or 2: Expand to form 0XXX00NNNN\n                result = value.charAt(0) + digits.substring(0, 2) + digits.charAt(5) + \"0000\" + digits.substring(2, 5);\n                break;\n            case '3':\n                // If the 4th digit is 3: Expand to form 0XXX00000NNNN\n                result = value.charAt(0) + digits.substring(0, 3) + \"00000\" + digits.substring(3, 5);\n                break;\n            case '4':\n                // If the 4th digit is 4: Expand to form 0XXXX00000NNNN\n                result = value.charAt(0) + digits.substring(0, 4) + \"00000\" + digits.charAt(4);\n                break;\n            default:\n                // If the 4th digit is 5-9: Expand to form 0XXXXXNNNN\n                result = value.charAt(0) + digits + \"0000\";\n                break;\n        }\n    \n        result += lastDigit;\n\n        return result;\n    }\n}\n\nvar Symbologies = { UPCE };\n\nclass GS1 {\n\n    static parse(result) {\n        let elements = [];\n\n        /* Decode GS1 data if we have a FNC1 character or a GS character */\n\n        if (result.fnc1 || result.value.includes(String.fromCharCode(29))) {\n            elements = Elements.parse(result.value);\n        }\n\n        /* Decode GS1 data if it is a GS1 Digital Link */\n\n        else if (DigitalLink.is(result.value)) {\n            elements = DigitalLink.parse(result.value);\n        }\n\n        /* Decode GS1 data if it is a GS1 DataBar */\n\n        else if (result.symbology?.startsWith('gs1-databar')) {\n            elements = Elements.parse(result.value);\n        }\n\n        /* Extract data from EAN and UPC barcodes */\n\n        else if (['upca','ean8','ean13'].includes(result.symbology)) {\n            elements = [\n                { ai: '01', label: 'GTIN', value: result.value.padStart(14, '0') }\n            ];\n        }\n\n        if (result.symbology === 'upce') {\n            elements = [\n                { ai: '01', label: 'GTIN', value: Symbologies.UPCE.expand(result.value).padStart(14, '0') }\n            ];\n        }\n\n        /* Prepare return value */\n\n        if (elements.length) {\n            let data = {\n                elements\n            };\n\n            let gtin = elements.find(e => e.ai === '01');\n            if (gtin) {\n                data.gtin = gtin.value;\n            }\n\n            return data;\n        }\n    }\n}\n\nclass Detector {\n    \n    static checkdigit(barcode) {\n        const digits = barcode.split('').map(i => parseInt(i, 10)).reverse();\n    \n        const total = digits.reduce((acc, number, i) => {\n            return acc + (i % 2 === 1 ? number : number * 3);\n        }, 0);\n    \n        return (Math.ceil(total / 10) * 10) - total;\n    }\n\n    static detect(barcode) {\n        if (barcode.startsWith('http')) {\n            return { symbology: 'qr-code', guess: true };\n        }\n\n        else if (barcode.startsWith('X-HM:')) {\n            return { symbology: 'qr-code', guess: false };\n        }\n\n        else if (barcode.startsWith('MT:')) {\n            return { symbology: 'qr-code', guess: false };\n        }\n\n        else if (barcode.startsWith('WIFI:')) {\n            return { symbology: 'qr-code', guess: false };\n        }\n\n        else if (barcode.match(/^[0-9]+$/) && barcode.length == 8) {            \n            if (Detector.checkdigit(barcode.slice(0, -1)) == barcode.slice(-1)) {\n                return { symbology: 'ean8', guess: false };\n            }\n        }\n\n        else if (barcode.match(/^[0-9]+$/) && barcode.length == 12) {\n            if (Detector.checkdigit(barcode.slice(0, -1)) == barcode.slice(-1)) {\n                return { symbology: 'upca', guess: false };\n            }\n        }\n\n        else if (barcode.match(/^[0-9]+$/) && barcode.length == 13) {\n            if (Detector.checkdigit(barcode.slice(0, -1)) == barcode.slice(-1)) {\n                return { symbology: 'ean13', guess: false };\n            }\n        }\n\n        else if (barcode.match(/^M[0-9]/)) {\n            return { symbology: 'aztec-code', guess: true };\n        }\n\n        else if (barcode.length > 128) {\n            return { symbology: 'pdf417', guess: true };\n        }\n\n        else if (barcode.length > 32) {\n            return { symbology: 'qr-code', guess: true };\n        }\n    }\n}\n\nexport { Aim, Detector, GS1, Symbologies };\n","import EventEmitter from './event-emitter.js';\nimport { Aim, GS1, Detector } from '@point-of-sale/barcode-parser';\n\nconst END_OF_TRANSMISSION_TIMEOUT = 300;\n\nclass WebSerialBarcodeScanner {\n\n    #options;\n    #internal;\n\t\n\tconstructor(options) {\n\t\tthis.#options = Object.assign({\n\t\t\tbaudRate:\t\t9600,\n\t\t\tbufferSize:\t\t255,\n\t\t\tdataBits:\t\t8,\n\t\t\tflowControl:\t'none',\n\t\t\tparity:\t\t\t'none',\n\t\t\tstopBits:\t\t1,\n\t\t\tguessSymbology: false,\n\t\t\tallowedSymbologies:\t[],\n\t\t}, options);\n\n\t\tthis.#internal = {\n\t\t\temitter:    \tnew EventEmitter(),\n\t\t\tport:     \t\tnull,\n\t\t\treader:     \tnull,\n\t\t\ttimeout:    \tnull\n\t\t};\n\n\t\tnavigator.serial.addEventListener('disconnect', event => {\n\t\t\tif (this.#internal.port == event.target) {\n\t\t\t\tthis.#internal.emitter.emit('disconnected');\n\t\t\t}\n\t\t});\n\t}\n\n\tasync connect() {\n\t\ttry {\n\t\t\tlet port = await navigator.serial.requestPort();\n\t\t\t\n\t\t\tif (port) {\n\t\t\t\tawait this.open(port);\n\t\t\t}\n\t\t}\n\t\tcatch(error) {\n\t\t\tconsole.log('Could not connect! ' + error);\n\t\t}\n\t}\n\n\tasync reconnect(previousPort) {\n\t\tif (!previousPort.vendorId || !previousPort.productId) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet ports = await navigator.serial.getPorts();\n\n\t\tlet matches = ports.filter(port => {\n\t\t\tlet info = port.getInfo();\n\t\t\treturn info.usbVendorId == previousPort.vendorId && info.usbProductId == previousPort.productId;\n\t\t})\n\n\t\tif (matches.length == 1) {\n\t\t\tawait this.open(matches[0]);\n\t\t}\n\t}\n\n\tasync disconnect() {\n\t\tif (!this.#internal.port) {\n\t\t\treturn;\n\t\t}\n\n        this.#internal.reader.releaseLock();\n        await this.#internal.port.close();\n\n        this.#internal.port = null;\n        this.#internal.reader = null;\n\t\tthis.#internal.timeout = null;\n\t\tthis.#internal.emitter.emit('disconnected');\n\t}\n\n\tasync open(port) {\n\t\tthis.#internal.port = port;\n\n\t\tawait this.#internal.port.open(this.#options);\n\n\t\tlet info = this.#internal.port.getInfo();\n\n\t\tthis.#internal.emitter.emit('connected', {\n\t\t\ttype:\t\t\t\t'serial',\n\t\t\tvendorId: \t\t\tinfo.usbVendorId || null,\n\t\t\tproductId: \t\t\tinfo.usbProductId || null\n\t\t});\n\n\t\tlet buffer = [];\n\n\t\twhile (port.readable) {\n            this.#internal.reader = port.readable.getReader();\n\n\t\t\ttry {\n\t\t\t\twhile (true) {\n                    const { value, done } = await this.#internal.reader.read();\n\n\t\t\t\t\t/* Cancel any pending timeouts */\n\n\t\t\t\t\tif (this.#internal.timeout) {\n\t\t\t\t\t\tclearTimeout(this.#internal.timeout);\n\t\t\t\t\t\tthis.#internal.timeout = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (done) {\n                        this.#internal.reader.releaseLock();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tbuffer.push(...value);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Set a timeout to parse the buffer if no new data is received */\n\n\t\t\t\t\tthis.#internal.timeout = setTimeout(() => {\n\t\t\t\t\t\tthis.#parse(buffer);\n\t\t\t\t\t\tbuffer = [];\n\t\t\t\t\t}, END_OF_TRANSMISSION_TIMEOUT);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('error', error);\n\t\t\t\tbuffer = [];\n\t\t\t}\n\t\t}\t\n\t}\n\n\t#parse(buffer) {\n\t\tlet result = {\n\t\t\tvalue: String.fromCharCode.apply(null, buffer),\n\t\t\tbytes: [\n\t\t\t\tnew Uint8Array(buffer)\n\t\t\t]\n\t\t};\n\n\t\t/* If the last character of value is a new line, remove it */\n\n\t\tif (result.value.endsWith('\\n')) {\n\t\t\tresult.value = result.value.slice(0, -1);\n\t\t}\n\n\t\tif (result.value.endsWith('\\r')) {\n\t\t\tresult.value = result.value.slice(0, -1);\n\t\t}\n\n\t\t/* Check if we have and AIM identifier */\n\n\t\tif (result.value.startsWith(']')) {\n\t\t\tlet aim = Aim.decode(result.value.substr(0, 3), result.value.substr(3));\n\n\t\t\tif (aim) {\n\t\t\t\tresult.aim = result.value.substr(0, 3);\n\t\t\t\tresult.symbology = aim;\n\t\t\t}\n\n\t\t\tresult.value = result.value.substr(3);\n\t\t}\n\n\t\t/* Otherwise try to guess the symbology */\n\n\t\telse if (this.#options.guessSymbology) {\n\t\t\tlet detected = Detector.detect(result.value);\n\n\t\t\tif (detected) {\n\t\t\t\tresult = Object.assign(result, detected);\n\t\t\t}\n\t\t}\n\n\t\t/* Decode GS1 data */\n\n\t\tlet parsed = GS1.parse(result);\n\t\tif (parsed) {\n\t\t\tresult.data = parsed;\n\t\t}\n\t\t\n\t\t/* Emit the barcode event */\n\n\t\tif (this.#options.allowedSymbologies.length === 0 ||\n\t\t\tthis.#options.allowedSymbologies.includes(result.symbology)) \n\t\t{\n\t\t\tthis.#internal.emitter.emit('barcode', result);\n\t\t}\n\t}\n\n\taddEventListener(n, f) {\n\t\tthis.#internal.emitter.on(n, f);\n\t}\n}\n\nexport default WebSerialBarcodeScanner;"],"names":["EventEmitter","constructor","device","this","_events","on","e","f","push","emit","args","fs","forEach","setTimeout","Aim","static","aim","value","data","symbology","code","modifier","fnc1","length","model","labels","Object","fromEntries","map","i","j","reduce","a","c","fixedLength","patterns","checkDigitPositions","DigitalLink","match","ai","counter","total","multiplier","charAt","checkDigitPosition","actualCheckDigit","parseInt","expectedCheckDigit","calculateCheckDigit","console","log","RegExp","test","link","candidates","url","URL","pathname","pairs","substr","split","shift","decodeURIComponent","search","URLSearchParams","replace","elements","valid","verifySyntax","verifyCheckDigit","padStart","label","sort","b","localeCompare","GS","String","fromCharCode","Elements","segments","segment","element","aiSize","Symbologies","UPCE","digits","substring","lastDigit","result","GS1","includes","parse","is","startsWith","expand","gtin","find","Detector","barcode","reverse","acc","number","Math","ceil","guess","checkdigit","slice","WebSerialBarcodeScanner","options","internal","assign","baudRate","bufferSize","dataBits","flowControl","parity","stopBits","guessSymbology","allowedSymbologies","emitter","port","reader","timeout","navigator","serial","addEventListener","event","target","async","requestPort","open","error","previousPort","vendorId","productId","matches","getPorts","filter","info","getInfo","usbVendorId","usbProductId","releaseLock","close","type","buffer","readable","getReader","done","read","clearTimeout","apply","bytes","Uint8Array","endsWith","decode","detected","detect","parsed","n"],"mappings":"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CI,OAGR,CACI,SACA,CACI,OAGR,CACI,MACA,CACI,OAGR,CACI,aACA,CACI,OAGR,CACI,QACA,CACI,OAGR,CACI,WACA,CACI,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGR,CACI,gBACA,CACI,QAGR,CACI,iBACA,CACI,QAGR,CACI,cACA,CACI,QAGR,CACI,MACA,CACI,QAGR,CACI,mBACA,CACI,QAGR,CACI,kBACA,CACI,QAGR,CACI,OACA,CACI,QAGR,CACI,0BACA,CACI,QAGR,CACI,MACA,CACI,QAGR,CACI,eACA,CACI,QAGR,CACI,OACA,CACI,QAGR,CACI,OACA,CACI,QAGR,CACI,QACA,CACI,QAGR,CACI,cACA,CACI,QAGR,CACI,WACA,CACI,QAGR,CACI,gBACA,CACI,QAGR,CACI,eACA,CACI,QAGR,CACI,SACA,CACI,QAGR,CACI,SACA,CACI,QAGR,CACI,gBACA,CACI,QAGR,CACI,eACA,CACI,MACA,QAGR,CACI,SACA,CACI,QAGR,CACI,6BACA,CACI,QAGR,CACI,qBACA,CACI,QAGR,CACI,wBACA,CACI,QAGR,CACI,yBACA,CACI,QAGR,CACI,qBACA,CACI,QAGR,CACI,WACA,CACI,QAGR,CACI,WACA,CACI,QAGR,CACI,UACA,CACI,QAGR,CACI,WACA,CACI,QAGR,CACI,WACA,CACI,QAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,aACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,YACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,aACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,aACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,iBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,aACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,aACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,aACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,oBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,iBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,oBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,aACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,oBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,oBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,kBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,oBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,mBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,qBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,iBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,iBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,iBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,qBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,qBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,qBACA,CACI,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,SACA,CACI,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,QACA,CACI,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,YACA,CACI,OACA,OACA,OACA,SAGR,CACI,MACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,cACA,CACI,SAGR,CACI,iBACA,CACI,SAGR,CACI,aACA,CACI,SAGR,CACI,oBACA,CACI,SAGR,CACI,eACA,CACI,SAGR,CACI,kBACA,CACI,SAGR,CACI,oBACA,CACI,SAGR,CACI,cACA,CACI,SAGR,CACI,aACA,CACI,SAGR,CACI,YACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,kBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,gBACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,WACA,CACI,SAGR,CACI,aACA,CACI,SAGR,CACI,SACA,CACI,SAGR,CACI,OACA,CACI,SAGR,CACI,OACA,CACI,SAGR,CACI,iBACA,CACI,SAGR,CACI,OACA,CACI,SAGR,CACI,OACA,CACI,SAGR,CACI,YACA,CACI,SAGR,CACI,UACA,CACI,SAGR,CACI,OACA,CACI,SAGR,CACI,cACA,CACI,SAGR,CACI,UACA,CACI,SAGR,CACI,wEACA,CACI,SAGR,CACI,kBACA,CACI,SAGR,CACI,mBACA,CACI,SAGR,CACI,OACA,CACI,SAGR,CACI,SACA,CACI,SAGR,CACI,eACA,CACI,SAGR,CACI,SACA,CACI,SAGR,CACI,cACA,CACI,UAOHC,KAAIC,GAAKA,EAAE,GACXD,KAAIE,GAAK,CAAEA,EAAGD,EAAE,QAChBE,QAAO,CAACC,EAAEC,IAAM,IAAKD,KAAMC,IAAI,KAGlCC,EAAc,CAChB,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,KAAM,GACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,EACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,GACN,GAAM,IAqqBJC,EAAWT,OAAOC,YAlqBD,CACnB,CACI,sBACA,CACI,OAGR,CACI,yEACA,CACI,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,SAGR,CACI,WACA,CACI,KACA,KACA,KACA,KACA,KACA,KACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,WACA,CACI,OAGR,CACI,aACA,CACI,KACA,OAGR,CACI,yEACA,CACI,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,SAGR,CACI,yEACA,CACI,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGR,CACI,aACA,CACI,QAGR,CACI,kFACA,CACI,QAGR,CACI,uBACA,CACI,QAGR,CACI,YACA,CACI,QAGR,CACI,YACA,CACI,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SAGR,CACI,gFACA,CACI,QAGR,CACI,WACA,CACI,MACA,MACA,QAGR,CACI,sBACA,CACI,MACA,QAGR,CACI,wEACA,CACI,MACA,SAGR,CACI,cACA,CACI,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,sBACA,CACI,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,WACA,CACI,OACA,OACA,OACA,OACA,SAGR,CACI,YACA,CACI,SAGR,CACI,aACA,CACI,SAGR,CACI,yEACA,CACI,SAGR,CACI,cACA,CACI,SAGR,CACI,yEACA,CACI,SAGR,CACI,wEACA,CACI,SAGR,CACI,iFACA,CACI,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,yEACA,CACI,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAGR,CACI,YACA,CACI,OACA,OAGR,CACI,kFACA,CACI,SAGR,CACI,4BACA,CACI,OACA,SAGR,CACI,yEACA,CACI,SAGR,CACI,qBACA,CACI,SAGR,CACI,yEACA,CACI,SAGR,CACI,kDACA,CACI,SAGR,CACI,cACA,CACI,SAGR,CACI,YACA,CACI,OACA,OACA,OAGR,CACI,cACA,CACI,SAGR,CACI,yEACA,CACI,SAGR,CACI,yEACA,CACI,OACA,OACA,UAOHC,KAAIC,GAAKA,EAAE,GACXD,KAAIE,GAAK,CAAEA,EAAGD,EAAE,QAChBE,QAAO,CAACC,EAAEC,IAAM,IAAKD,KAAMC,IAAI,KAGlCG,EAAsB,CACxB,IAAO,GACP,IAAO,GACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,KAAQ,GACR,KAAQ,GACR,KAAQ,IACR,KAAQ,IACR,KAAQ,GACR,KAAM,IACN,KAAM,IACN,KAAM,KAGV,MAAMC,EAEFtB,UAAUG,GACN,MAAuB,iBAATA,IACVA,EAAKoB,MAAM,0NACXpB,EAAKoB,MAAM,sGAElB,CAEJvB,2BAA2BwB,EAAItB,GAC9B,IAAIuB,EAAU,EACVC,EAAQ,EAIZ,IAAK,IAAIZ,GAFkD,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","x_google_ignoreList":[1]}